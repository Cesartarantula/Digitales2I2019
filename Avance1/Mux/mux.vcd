$date
	Wed Jun 12 08:52:55 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb $end
$var wire 1 ! valid_out $end
$var wire 1 " valid_in_1 $end
$var wire 1 # valid_in_0 $end
$var wire 1 $ reset_L $end
$var wire 8 % data_out [7:0] $end
$var wire 8 & data_in_1 [7:0] $end
$var wire 8 ' data_in_0 [7:0] $end
$var wire 1 ( clk $end
$scope module mx $end
$var wire 1 " valid_in_1 $end
$var wire 1 # valid_in_0 $end
$var wire 1 $ reset_L $end
$var wire 8 ) data_in_1 [7:0] $end
$var wire 8 * data_in_0 [7:0] $end
$var wire 1 ( clk $end
$var reg 8 + data_out [7:0] $end
$var reg 1 , selector $end
$var reg 1 - v_activo_0 $end
$var reg 1 . v_activo_1 $end
$var reg 1 ! valid_out $end
$upscope $end
$scope module proba $end
$var wire 8 / data_out [7:0] $end
$var wire 1 ! valid_out $end
$var reg 1 ( clk $end
$var reg 8 0 data_in_0 [7:0] $end
$var reg 8 1 data_in_1 [7:0] $end
$var reg 1 $ reset_L $end
$var reg 1 # valid_in_0 $end
$var reg 1 " valid_in_1 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
bx 0
bx /
x.
x-
x,
bx +
bx *
bx )
0(
bx '
bx &
bx %
x$
x#
x"
x!
$end
#20
b0 %
b0 +
b0 /
0.
0-
0$
0#
b0 &
b0 )
b0 1
b0 '
b0 *
b0 0
1(
#40
0(
#60
1$
0"
b10111011 &
b10111011 )
b10111011 1
b10101010 '
b10101010 *
b10101010 0
0,
0!
1(
#80
0(
#100
1#
b10111100 &
b10111100 )
b10111100 1
b10101100 '
b10101100 *
b10101100 0
1(
#120
0(
#140
1"
b11011100 &
b11011100 )
b11011100 1
b11111111 '
b11111111 *
b11111111 0
1-
1(
#160
0(
#180
b11111111 %
b11111111 +
b11111111 /
b0 &
b0 )
b0 1
b11101110 '
b11101110 *
b11101110 0
1!
1(
#200
0(
#220
b1 &
b1 )
b1 1
b11011101 '
b11011101 *
b11011101 0
b11101110 %
b11101110 +
b11101110 /
1(
#240
0(
#260
b11011101 %
b11011101 +
b11011101 /
0"
0#
b10 &
b10 )
b10 1
b11001100 '
b11001100 *
b11001100 0
1(
#280
0(
#300
b11101111 &
b11101111 )
b11101111 1
b11001101 '
b11001101 *
b11001101 0
b11001100 %
b11001100 +
b11001100 /
0-
1(
#320
0(
#340
b0 %
b0 +
b0 /
1"
b11011100 &
b11011100 )
b11011100 1
b11111110 '
b11111110 *
b11111110 0
0!
1(
#360
0(
#380
1#
b11 &
b11 )
b11 1
b10111101 '
b10111101 *
b10111101 0
1.
1(
#400
0(
#420
b11 %
b11 +
b11 /
0"
0#
b100 &
b100 )
b100 1
b10111011 '
b10111011 *
b10111011 0
1!
1(
#440
0(
#460
b100100 &
b100100 )
b100100 1
b11101111 '
b11101111 *
b11101111 0
b100 %
b100 +
b100 /
0.
1(
#480
0(
#500
b0 %
b0 +
b0 /
1"
1#
b101 &
b101 )
b101 1
b10101010 '
b10101010 *
b10101010 0
0!
1(
#520
0(
#540
0"
0#
b110 &
b110 )
b110 1
b1001 '
b1001 *
b1001 0
1-
1,
1(
#560
0(
#580
b1001 %
b1001 +
b1001 /
0-
b1000011 &
b1000011 )
b1000011 1
b10111111 '
b10111111 *
b10111111 0
1!
1(
#600
0(
#620
1"
1#
b111 &
b111 )
b111 1
b10001000 '
b10001000 *
b10001000 0
b0 %
b0 +
b0 /
0!
1(
#640
0(
#660
1.
0,
0"
0#
b1000 &
b1000 )
b1000 1
b1110111 '
b1110111 *
b1110111 0
1(
#680
0(
#700
0$
b0 &
b0 )
b0 1
b0 '
b0 *
b0 0
b1000 %
b1000 +
b1000 /
0.
1!
1(
#720
0(
#740
0!
b0 %
b0 +
b0 /
1(
#760
0(
#780
1(
#800
0(
#820
1(
#840
0(
#860
1(
#880
0(
#900
1(
#920
0(
#940
1(
#960
0(
#980
1(
#1000
0(
#1020
1(
#1040
0(
#1060
1(
#1080
0(
#1100
1(
#1120
0(
#1140
1(
#1160
0(
#1180
1(
#1200
0(
#1220
1(
#1240
0(
#1260
1(
#1280
0(
#1300
1(
